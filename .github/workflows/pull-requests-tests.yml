# (c) Copyright 2019-2023 OLX

name: pull-request-tests

on:
  pull_request:
    branches:
      - master

env:
  REGISTRY: docker.pkg.github.com
  IMAGE_NAME: ${{ github.repository }}/dali

jobs:
  test:
    runs-on: ubuntu-latest
    container: rust:1.73-alpine3.18
    services:
      backend:
        image: nginx:latest
        options: -v ${{ github.workspace }}/tests/resources/:/usr/share/nginx/html/ --name backend
    steps:
      - uses: actions/checkout@v4
      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart backend
      - name: Install build dependencies
        run:  apk add --update --no-cache
              --repository https://dl-cdn.alpinelinux.org/alpine/v3.18/community
              --repository https://dl-cdn.alpinelinux.org/alpine/v3.18/main
              curl
              musl-dev=1.2.4-r2
              vips-dev=8.14.3-r0
              vips-heif=8.14.3-r0
              openssl
              tar
      - name: Check if nginx is available for files hosting
        run:  curl http://backend/exif --output /dev/null
      - uses: Swatinem/rust-cache@v2
      - name: Build Dali
        run:  RUSTFLAGS="-C target-feature=-crt-static $(pkg-config vips --libs)" cargo build
      - name: Run Dali
        run:  ./target/debug/dali >> /dev/null &
      - name: Check if Dali is running
        run:  sleep 5 &&  nc -z localhost 8080
      - name: Run tests
        run:  RUST_BACKTRACE=1 RUSTFLAGS="-C target-feature=-crt-static $(pkg-config vips --libs)" HTTP_HOST=backend cargo test
      - name: Exit with the test result
        run:  exit $?
  docker-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        if: github.event_name == 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        if: github.event_name == 'pull_request'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr

      - name: Build and push
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name:
        uses: marocchino/sticky-pull-request-comment@v2
        # Inform the user that a preview image has been built and published
        with:
          header: pr-docker-image
          message: |
            Hey there and thank you for opening this pull request! üëãüèº

            You can pull a preview docker image of dali with the below command:

            ```console
            docker pull ${{ steps.meta.outputs.tags }}
            ```
